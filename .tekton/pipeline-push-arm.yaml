apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: pipeline-push-arm
spec:
  description: |
    this pipeline offers a typical CI/CD process, with a flow including:
    - fetching a git repository as the source
    - using buildah to build a Docker image by Dockerfile
    - pusing the built Docker image to a desired repository
    - deploying it to Kubernetes cluster
  
  # Parameters
  params:
  - name: repo-url
    type: string
    description: The git repository URL to clone from.
  - name: tag-name
    type: string
    description: The git tag to clone.
  - name: image-full-path-with-tag
    type: string
    description: The image full path to host the built image, with version tag, e.g. "docker.io/koustavs18/nodejs-app:latest"


  # Workspaces
  workspaces:
  - name: workspace
  - name: maven-settings
  - name: empty-dir
  - name: quay-cred
  
  # Tasks
  tasks:

  # 1. Task - fetch-repository
  - name: fetch-repository
    taskRef:
      name: git-clone
      kind: ClusterTask
    params:
    - name: url
      value: $(params.repo-url)
    - name: revision
      value: $(params.tag-name)
    - name: deleteExisting
      value: "true"
    workspaces:
    - name: output
      workspace: workspace


  # 3. Task - maven build
  - name: maven-build
    taskRef:
      name: maven
      kind: ClusterTask
    runAfter:
    - fetch-repository
    params:
    - name: GOALS
      value:
        - -B
        - -DskipTests
        - clean
        - package
    workspaces:
    - name: maven-settings
      workspace: maven-settings
    - name: source
      workspace: workspace

  # 4. Task - buildah build & push to quay
  - name: buildah
    taskRef:
      name: buildah
      kind: ClusterTask
    runAfter:
    - maven-build
    params:
      - name: IMAGE
        value: "$(params.image-full-path-with-tag)"
      - name: BUILD_EXTRA_ARGS
        value: "--arch arm64"
      - name: TLSVERIFY
        value: "false"
      - name: STORAGE_DRIVER
        value: "vfs"
    workspaces:
      - name: source
        workspace: workspace
      - name: dockerconfig
        workspace: quay-cred

  # 5. Task - kubectl deploy
  - name: deploy
    taskRef:
      name: openshift-client
      kind: ClusterTask
    runAfter:
    - buildah
    params:
      - name: SCRIPT
        value: |
          oc create --filename k8s/
          echo "----------"
          oc patch deployment spring-boot-docker -p '{"spec":{"template":{"spec":{"containers":[{"name":"myapp","image":"$(params.image-full-path-with-tag)"}]}}}}'
          oc get deployment
    workspaces:
      - name: manifest-dir
        workspace: workspace
